<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

	<!-- =================== DEFINE TRANSACTION MANAGER =================== -->
     <!-- ============== Using JTA/Non-XA ============= -->
	<bean id="DataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
		<property name="uniqueResourceName" value="${jdbc.jndiName}"/>
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"/>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
		<property name="borrowConnectionTimeout" value="${jdbc.borrowConnectionTimeout}"/>
	</bean>

    <!-- DataSource for Embedded db -->
    <bean id="DBEmbeddedDataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
		<property name="uniqueResourceName" value="DBEmbeddedDataSource"/>
		<property name="driverClassName" value="${dbembedded.jdbc.driverClassName}"/>
		<property name="url" value="${dbembedded.jdbc.url}" />
		<property name="user" value="${dbembedded.jdbc.username}" />
		<property name="password" value="${dbembedded.jdbc.password}" />
	    <property name="minPoolSize" value="${dbembedded.jdbc.minPoolSize}"/>
		<property name="maxPoolSize" value="${dbembedded.jdbc.maxPoolSize}"/>
		<property name="borrowConnectionTimeout" value="${jdbc.borrowConnectionTimeout}"/>
	</bean>

		<!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<!--  when close is called, should we force transactions to terminate or not? -->
		<property name="forceShutdown" value="true"/>
	</bean>

	<!-- Also use Atomikos UserTransactionImp, needed to configure Spring  -->
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
	    <property name="transactionTimeout" value="${jdbc.transactionTimeout}"/>
	</bean>

    <!-- Configure the Spring framework to use JTA transactions from Atomikos-->
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager"/>
		<property name="userTransaction" ref="atomikosUserTransaction"/>
	</bean>

	<!-- ============================== DEFINE TRANSACTION PROXY====================================== -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="restore*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="insert*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="assign*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="unassign*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="approve*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="reject*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="add*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-vn.com.web.commons.exception.BaseException</prop>
				<prop key="*">PROPAGATION_SUPPORTS,readOnly</prop>
			</props>
		</property>
	</bean>
</beans>